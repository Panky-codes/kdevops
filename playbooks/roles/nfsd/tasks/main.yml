---
# tasks to install dependencies for pynfs
- name: oscheck distribution ospecific setup
  import_tasks: tasks/install-deps/debian/main.yml
  when: ansible_facts['os_family']|lower == 'debian'
- import_tasks: tasks/install-deps/suse/main.yml
  when: ansible_facts['os_family']|lower == 'suse'
- import_tasks: tasks/install-deps/redhat/main.yml
  when: ansible_facts['os_family']|lower == 'redhat'

- name: Create and mount first exported filesystem
  tags: [ 'nfsd' ]
  include_role:
    name: create_partition
  vars:
    disk_setup_device: "{{ nfsd_export_device_0 }}"
    disk_setup_fstype: "{{ nfsd_export_fstype }}"
    disk_setup_label : "{{ nfsd_export_label }}0"
    disk_setup_fs_opts: "{{ nfsd_export_fs_opts }} -L {{ nfsd_export_label }}0"
    disk_setup_path: "{{ nfsd_export_path }}/0"
    disk_setup_user: "{{ data_user }}"
    disk_setup_group: "{{ data_group }}"

- name: Create and mount second exported filesystem
  tags: [ 'nfsd' ]
  include_role:
    name: create_partition
  vars:
    disk_setup_device: "{{ nfsd_export_device_1 }}"
    disk_setup_fstype: "{{ nfsd_export_fstype }}"
    disk_setup_label : "{{ nfsd_export_label }}1"
    disk_setup_fs_opts: "{{ nfsd_export_fs_opts }} -L {{ nfsd_export_label }}1 "
    disk_setup_path: "{{ nfsd_export_path }}/1"
    disk_setup_user: "{{ data_user }}"
    disk_setup_group: "{{ data_group }}"

- name: Make the exported filesystem a world-writeable sticky dir
  tags: [ 'nfsd' ]
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  ansible.builtin.file:
    path: "{{ nfsd_export_path }}"
    owner: root
    group: root
    mode: 01777

- name: Create /etc/exports with an export for /exports
  tags: [ 'nfsd' ]
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  template:
    src: exports.j2
    dest: /etc/exports
    owner: root
    group: root
    mode: 0644

- name: Generate /etc/nfs.conf
  tags: [ 'nfsd' ]
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  template:
    src: nfs.conf.j2
    dest: /etc/nfs.conf
    owner: root
    group: root
    mode: 0644

- name: Start up nfsd
  tags: [ 'nfsd' ]
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  ansible.builtin.systemd:
    name: nfs-server.service
    enabled: true
    state: reloaded
