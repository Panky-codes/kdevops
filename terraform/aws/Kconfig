if TERRAFORM_AWS

choice
	prompt "AWS region to use"
	default TERRAFORM_AWS_US_WEST_2

config TERRAFORM_AWS_US_WEST_1
	bool "us-west-1 - North California"
	help
	  This option will set the AWS region to us-west-1.

config TERRAFORM_AWS_US_WEST_2
	bool "us-west-2 - Oregon"
	help
	  This option will set the AWS region to us-west-2.

endchoice

config TERRAFORM_AWS_REGION
	string
	default "us-west-1" if TERRAFORM_AWS_US_WEST_1
	default "us-west-2" if TERRAFORM_AWS_US_WEST_2
	help
	  This option will set the AWS region to the specified value.

	  If you wish to expand on this list send a patch after reading
	  this list:

	  https://docs.aws.amazon.com/general/latest/gr/rande.html

	  Note that if you change region the AMI may change as well even
	  for the same distribution. At least that applies to Amazon EC2
	  optimized images. Use the AWS console, to set that up it will
	  ask you for your credentials and then a region. Before adding
	  an entry for ami image be sure you are on the region and then
	  query with something like:

	  aws ec2 describe-images --image-ids ami-0efa651876de2a5ce

	  For instance, this AMI belongs to us-west-2 only. us-east* have
	  other AMIs for the same Amazon 2023 EC2 image. The output from
	  here tells me:

	  "OwnerId": "137112412989"

	  And that is what vaule to use for that ami-0efa651876de2a5ce
	  for the TERRAFORM_AWS_AMI_OWNER. To get the ami-* for your regions
	  just go to your EC2 console, that console will be associated with
	  a region already. You have to change regions if you want to look
	  for AMIs in other regions. There are for example two different
	  ami-* values for Amazon Linux 2023 for different regions. However
	  they values can be same. For example below are the us-west-2 queries
	  for Amazon Linux 2023 for x86_64 and then for ARM64.

	  aws ec2 describe-images --image-ids ami-0efa651876de2a5ce | grep OwnerId
	    "OwnerId": "137112412989",
	  aws ec2 describe-images --image-ids ami-0699f753302dd8b00 | grep OwnerId
	    "OwnerId": "137112412989",

config TERRAFORM_AWS_AV_REGION
	string
	default "us-west-1b" if TERRAFORM_AWS_US_WEST_1
	default "us-west-2b" if TERRAFORM_AWS_US_WEST_2
	help
	  This option will set the AWS availablity region to the specified
	  value.

	  If you wish to expand on this list send a patch after reading this
	  list:

	  https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html
	  https://gist.github.com/neilstuartcraig/0ccefcf0887f29b7f240

choice
	prompt "AWS AMI owner"
	default TERRAFORM_AWS_AMI_AMAZON_X86_64 if TARGET_ARCH_X86_64
	default TERRAFORM_AWS_AMI_AMAZON_ARM64 if TARGET_ARCH_ARM64

config TERRAFORM_AWS_AMI_DEBIAN
	bool "Debian - 379101102735"
	help
	  This option will set AWS AMI owner to Debian.

config TERRAFORM_AWS_AMI_AMAZON_X86_64
	bool "Amazon Linux 2023 x86_64 - ami-0efa651876de2a5ce"
	depends on TARGET_ARCH_X86_64 && TERRAFORM_AWS_US_WEST_2
	help
	  This option will set AWS AMI owner to Amazon EC2 images for x86_64.

config TERRAFORM_AWS_AMI_AMAZON_ARM64
	bool "Amazon Linux 2023 ARM64 - ami-0699f753302dd8b00"
	depends on TARGET_ARCH_ARM64 && TERRAFORM_AWS_US_WEST_2
	help
	  This option will set AWS AMI owner to Amazon EC2 images for arm64.

config TERRAFORM_AWS_RHEL9_X86_64
	bool "RHEL9 x86_64 - ami-0dda7e535b65b6469"
	depends on TARGET_ARCH_X86_64 && TERRAFORM_AWS_US_WEST_2
	help
	  This option will set AWS AMI owner to RHEL9 for x86_64.

config TERRAFORM_AWS_RHEL9_ARM64
	bool "RHEL9 x86_64 - ami-08911268ee09cb08e"
	depends on TARGET_ARCH_ARM64 && TERRAFORM_AWS_US_WEST_2
	help
	  This option will set AWS AMI owner to RHEL9 for ARM64

config TERRAFORM_AWS_SLE15_SP4_X86_64
	bool "SUSE Linux Enterprise Server 15 SP4 x86_64 - ami-079ba66a5e9f2b70e"
	depends on TARGET_ARCH_X86_64 && TERRAFORM_AWS_US_WEST_2
	help
	  This option will set AWS AMI owner to SLE15-SP4 for x86_64.

config TERRAFORM_AWS_SLE15_SP4_ARM64
	bool "SUSE Linux Enterprise Server 15 SP4 ARM64 - ami-00f902c807805f51a"
	depends on TARGET_ARCH_ARM64 && TERRAFORM_AWS_US_WEST_2
	help
	  This option will set AWS AMI owner to SLE15-SP4 for arm64.

endchoice

config TERRAFORM_AWS_AMI_OWNER
	string
	default "379101102735" if TERRAFORM_AWS_AMI_DEBIAN
	default "137112412989" if TERRAFORM_AWS_AMI_AMAZON_X86_64 || TERRAFORM_AWS_AMI_AMAZON_ARM64
	default "309956199498" if TERRAFORM_AWS_RHEL9_X86_64 || TERRAFORM_AWS_RHEL9_ARM64
	default "013907871322" if TERRAFORM_AWS_SLE15_SP4_X86_64 || TERRAFORM_AWS_SLE15_SP4_ARM64
	help
	  This option will set AWS AMI owner.

config TERRAFORM_AWS_NS
	string
	default "debian-stretch-hvm-x86_64-*" if TARGET_ARCH_X86_64 && TERRAFORM_AWS_AMI_DEBIAN
	default "debian-stretch-hvm-arm64-*" if TARGET_ARCH_ARM64 && TERRAFORM_AWS_AMI_DEBIAN
	default "al2023-*-x86_64" if TARGET_ARCH_X86_64 && TERRAFORM_AWS_AMI_AMAZON_X86_64
	default "al2023-*-arm64" if TARGET_ARCH_ARM64 && TERRAFORM_AWS_AMI_AMAZON_ARM64
	default "RHEL-9.*x86_64-*" if TARGET_ARCH_X86_64 && TERRAFORM_AWS_RHEL9_X86_64
	default "RHEL-9.*arm64-*" if TARGET_ARCH_ARM64 && TERRAFORM_AWS_RHEL9_ARM64
	default "suse-sles-15-sp4-*x86_64" if TARGET_ARCH_X86_64 && TERRAFORM_AWS_SLE15_SP4_X86_64
	default "suse-sles-15-sp4-*arm64" if TARGET_ARCH_ARM64 && TERRAFORM_AWS_SLE15_SP4_ARM64
	help
	  This option will set aws image search to use. Using this filter glob
	  lets us get the latest ami for this owner / release.

	  For debian updates you can use this list for AMI updates:

	  https://wiki.debian.org/Cloud/AmazonEC2Image/Stretch

	  If you want to expand on this list or just use a value yourself here
	  read:

	  https://letslearndevops.com/2018/08/23/terraform-get-latest-centos-ami/

	  To get filter values you can first setup aws cli:

	  https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html#cli-quick-configuration

	  Get your image ami id, for debian 9 amd64 on the us-west1 this is
	  ami-0adbaf2e0ce044437 so you can run:

	  aws ec2 describe-images --image-ids ami-0adbaf2e0ce044437 | grep Name

	  For details:

	  https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-images.html

config TERRAFORM_AWS_VIRT_TYPE
	string "AWS virt type"
	default "hvm"
	help
	  This option will set AWS virt type. It must match your your
	  preferred image filter used above for name search.

choice
	prompt "AWS instance type"
	default TERRAFORM_AWS_INSTANCE_M5AD_4XLARGE if TARGET_ARCH_X86_64
	default TERRAFORM_AWS_INSTANCE_IS4GEN_MEDIUM if TARGET_ARCH_ARM64

config TERRAFORM_AWS_INSTANCE_M5AD_4XLARGE
	bool "m5ad.4xlarge - $0.824 per Hour"
	depends on TARGET_ARCH_X86_64
	help
	  61 GiB RAM, 16 vcpus, 1 8 GiB main drive, and two additional
	  300 GiB NVMe drives.

config TERRAFORM_AWS_INSTANCE_IS4GEN_MEDIUM
	bool "is4gen.medium"
	depends on TARGET_ARCH_ARM64
	help
	  6 GiB RAM, 1vCPU, 1 x 937 GiB NVMe SSD, 25 Gbps Net, 9.6 Gbps EBS.
	  https://aws.amazon.com/ec2/instance-types/i4g/

config TERRAFORM_AWS_INSTANCE_IS4GEN_8XLARGE
	bool "is4gen.8xlarge"
	depends on TARGET_ARCH_ARM64
	help
	  192 GiB RAM, 32 vCPUs, 4 x 7500 GiB NVMe SSD, 50 Gbps Net, 19 Gbps EBS.
	  https://aws.amazon.com/ec2/instance-types/i4g/

config TERRAFORM_AWS_INSTANCE_IS4GEN_8XLARGE
	bool "is4gen.8xlarge"
	depends on TARGET_ARCH_ARM64
	help
	  192 GiB RAM, 32 vCPUs, 4 x 7500 NVMe SSD, 50 Gbps Net, 19 Gbps EBS.
	  https://aws.amazon.com/ec2/instance-types/i4g/

config TERRAFORM_AWS_INSTANCE_IM4GN_LARGE
	bool "im4gn.large"
	depends on TARGET_ARCH_ARM64
	help
	  8 GiB RAM, 2vCPUs, 1 x 937 GiB NVMe SSD, 25 Gbps Net, 9.5 Gbps EBS.
	  https://aws.amazon.com/ec2/instance-types/i4g/

config TERRAFORM_AWS_INSTANCE_IM4GN_4XLARGE
	bool "im4gn.4xlarge"
	depends on TARGET_ARCH_ARM64
	help
	  64 GiB RAM, 16 vcpus, 1 x 7500 NVMe SSD, 25 Gbps Net, 9.5 Gbps EBS.
	  https://aws.amazon.com/ec2/instance-types/i4g/

config TERRAFORM_AWS_INSTANCE_IM4GN_4XLARGE
	bool "im4gn.4xlarge"
	depends on TARGET_ARCH_ARM64
	help
	  64 GiB RAM, 16 vcpus, 1 x 7500 NVMe SSD, 25 Gbps Net, 9.5 Gbps EBS.
	  https://aws.amazon.com/ec2/instance-types/i4g/

config TERRAFORM_AWS_INSTANCE_I4I_LARGE
	bool "i4i.large"
	depends on TARGET_ARCH_X86_64
	help
	  16 GiB RAM, 2 vcpus, 1 x 468 AWS Nitro SSD, 10 Gbps Net, 10 Gbps EBS.
	  https://aws.amazon.com/ec2/instance-types/i4i/

config TERRAFORM_AWS_INSTANCE_I4I_METAL
	depends on TARGET_ARCH_X86_64
	bool "i4i.metal"
	help
	  1024 GiB RAM, 128 real cpus?, 8 x 3,750 AWS Nitro SSD,
	  75 Gbps Net, 40 Gbps EBS. The bees' knees I guess.
	  https://aws.amazon.com/ec2/instance-types/i4i/

endchoice

config TERRAFORM_AWS_INSTANCE_TYPE
	string "AWS AMI owner"
	default "m5ad.4xlarge" if TERRAFORM_AWS_INSTANCE_M5AD_4XLARGE
	default "is4gen.medium" if TERRAFORM_AWS_INSTANCE_IS4GEN_MEDIUM
	default "is4gen.8xlarge" if TERRAFORM_AWS_INSTANCE_IS4GEN_8XLARGE
	default "im4gn.4xlarge" if TERRAFORM_AWS_INSTANCE_IM4GN_4XLARGE
	default "is4gen.8xlarge" if TERRAFORM_AWS_INSTANCE_IS4GEN_8XLARGE
	default "im4gn.large" if TERRAFORM_AWS_INSTANCE_IM4GN_LARGE
	default "im4gn.4xlarge" if TERRAFORM_AWS_INSTANCE_IM4GN_4XLARGE
	default "im4gn.4xlarge" if TERRAFORM_AWS_INSTANCE_IM4GN_4XLARGE
	default "i4i.large" if TERRAFORM_AWS_INSTANCE_I4I_LARGE
	default "i4i.metal" if TERRAFORM_AWS_INSTANCE_I4I_METAL
	help
	  This sets the aws instance type. There are many options, so go
	  read this if you want to expand on this list or just set the value
	  here:

	  https://aws.amazon.com/ec2/instance-types/

	  The AWS free trial limits you to 750 hours of only t2.micro.

endif # TERRAFORM_AWS
